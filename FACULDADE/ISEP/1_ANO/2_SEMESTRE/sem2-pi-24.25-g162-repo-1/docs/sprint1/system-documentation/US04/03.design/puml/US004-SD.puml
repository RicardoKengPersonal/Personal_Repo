


@startuml
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Editor" as EDITOR
participant ":CreateScenarioUI" as UI
participant ":CreateScenarioController" as CTRL
participant "Repositories" as REPOS
participant "repositories\n:Repositories" as REPOS_SINGLETON
participant "mapRepository\n:MapRepository" as MAP_REPO
participant "map\n:Map" as MAP
participant "mapMapper\n:MapMapper" as MAP_MAPPER
participant "mapDTO\n:MapDTO" as MAP_DTO
participant "scenarios\n:Scenarios" as SCENARIOS
participant "scenario\n:Scenario" as SCENARIO
participant "currentSession\n:CurrentSession" as CURRENT_SESSION

activate EDITOR

    EDITOR -> UI : asks to create a new scenario
    activate UI
        UI --> CTRL ** : create()

        UI -> CTRL : getListOfMaps()
        activate CTRL
            CTRL -> REPOS : getInstance()
            activate REPOS
                REPOS --> CTRL: repositories
            deactivate REPOS

            CTRL -> REPOS_SINGLETON : getMapRepository()
            activate REPOS_SINGLETON
                REPOS_SINGLETON --> CTRL: mapRepository
            deactivate REPOS_SINGLETON

            CTRL -> MAP_REPO : getListOfMaps()
            activate MAP_REPO
                MAP_REPO --> CTRL : List<Map>
            deactivate MAP_REPO

            CTRL -> MAP_MAPPER : mapListToMapDTOList(List<Map>)
            activate MAP_MAPPER
                loop for each map
                    MAP_MAPPER -> MAP_DTO **: toDTO(map)
                    activate MAP_DTO
                    MAP_DTO --> MAP_MAPPER : mapDTO
                    deactivate MAP_DTO
                end
                MAP_MAPPER --> CTRL : List<MapDTO>
            deactivate MAP_MAPPER
            CTRL --> UI : mapList
        deactivate CTRL

        UI --> EDITOR : shows map list and asks to select one
    deactivate UI

EDITOR -> UI : selects map
activate UI
    UI --> EDITOR : requests data (name, description, ...)
deactivate UI

EDITOR -> UI : types requested data

activate UI
    UI -> CTRL : createScenario(name, description, ...)
    activate CTRL
        CTRL -> CURRENT_SESSION : getCurrentUser()
        activate CURRENT_SESSION
        CURRENT_SESSION --> CTRL : editor
        deactivate CURRENT_SESSION

        CTRL -> SCENARIOS : createScenario(mapDTO, ...)
        activate SCENARIOS
            SCENARIOS -> SCENARIO **: create(mapDTO, ..., editor)
            SCENARIOS -> SCENARIOS : addScenario(scenario)
            SCENARIOS --> CTRL : void
        deactivate SCENARIOS

    CTRL --> UI : void
    deactivate CTRL

    UI --> EDITOR : displays operation success
deactivate UI

deactivate EDITOR
@enduml
